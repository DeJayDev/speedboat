From 90f6bb4fc0f761cf4d767b9002ca0748d2f7b408 Mon Sep 17 00:00:00 2001
From: DeJay <contact@dejaydev.com>
Date: Wed, 27 Nov 2019 14:29:26 -0600
Subject: [PATCH 19/24] [etc] Grab some small fixes from jetski

Thanks Tiemen. These changes (and the dog command) come from Jetski as it is the closest copy of speedboat's version of rowboat.
---
 rowboat/models/notification.py |  4 +--
 rowboat/plugins/admin.py       | 47 +++++++++++++++++++++++-----------
 rowboat/plugins/utilities.py   | 24 ++++++++---------
 3 files changed, 45 insertions(+), 30 deletions(-)

diff --git a/rowboat/models/notification.py b/rowboat/models/notification.py
index d83a72e..0a07f31 100644
--- a/rowboat/models/notification.py
+++ b/rowboat/models/notification.py
@@ -64,10 +64,10 @@ class Notification(BaseModel):
         elif self.type_ == self.Types.CONNECT:
             data['title'] = u'{} connected'.format(
                 'Production' if self.metadata['env'] == 'prod' else 'Testing')
-            data['content'] = ', '.join(self.metadata['trace'])
+            data['content'] = ', '.join(self.metadata.get('trace'))
         elif self.type_ == self.Types.RESUME:
             data['title'] = u'{} resumed'.format(
                 'Production' if self.metadata['env'] == 'prod' else 'Testing')
-            data['content'] = ', '.join(self.metadata['trace'])
+            data['content'] = ', '.join(self.metadata.get('trace'))
 
         return data
diff --git a/rowboat/plugins/admin.py b/rowboat/plugins/admin.py
index bf8c93f..39db20d 100644
--- a/rowboat/plugins/admin.py
+++ b/rowboat/plugins/admin.py
@@ -302,8 +302,16 @@ class AdminPlugin(Plugin):
         try:
             GuildBan.get(user_id=user, guild_id=event.guild.id)
             event.guild.delete_ban(user)
-        except GuildBan.DoesNotExist:
-            raise CommandFail('user with id `{}` is not banned'.format(user))
+
+            GuildBan.delete().where(
+                (GuildBan.user_id == event.user.id) &
+                (GuildBan.guild_id == event.guild_id)
+            )
+        except (GuildBan.DoesNotExist, APIException) as e:
+            if hasattr(e, 'code') and e.code != 10026: # Unknown Ban
+                raise APIException(e.response)
+
+            raise CommandFail('User with id `{}` is not banned'.format(user))
 
         Infraction.create(
             guild_id=event.guild.id,
@@ -312,7 +320,7 @@ class AdminPlugin(Plugin):
             type_=Infraction.Types.UNBAN,
             reason=reason
         )
-        raise CommandSuccess('unbanned user with id `{}`'.format(user))
+        raise CommandSuccess('Unbanned user with id `{}`'.format(user))
 
     @Plugin.command('archive', group='infractions', level=CommandLevels.ADMIN)
     def infractions_archive(self, event):
@@ -539,7 +547,7 @@ class AdminPlugin(Plugin):
         if deleted:
             event.msg.reply(':ok_hand: I\'ve cleared the member backup for that user')
         else:
-            raise CommandFail('I couldn\t find any member backups for that user')
+            raise CommandFail('I couldn\'t find any member backups for that user')
 
     def can_act_on(self, event, victim_id, throw=True):
         if event.author.id == victim_id:
@@ -557,7 +565,7 @@ class AdminPlugin(Plugin):
         return True
 
     @Plugin.command('mute', '<user:user|snowflake> [reason:str...]', level=CommandLevels.MOD)
-    @Plugin.command('tempmute', '<user:user|snowflake> <duration:str> [reason:str...]', level=CommandLevels.MOD)
+    @Plugin.command('tempmute', '<user:user|snowflake> <duration:str> [reason:str...]', level=CommandLevels.MOD, aliases=['timeout'])
     def tempmute(self, event, user, duration=None, reason=None):
         if not duration and reason:
             duration = parse_duration(reason.split(' ')[0], safe=True)
@@ -649,7 +657,7 @@ class AdminPlugin(Plugin):
 
     @Plugin.command('unmute', '<user:user|snowflake>', level=CommandLevels.MOD)
     def unmute(self, event, user, reason=None):
-        # TOOD: eventually we should pull the role from the GuildMemberBackup if they arent in server
+        # TODO: eventually we should pull the role from the GuildMemberBackup if they arent in server
         member = event.guild.get_member(user)
 
         if member:
@@ -838,7 +846,7 @@ class AdminPlugin(Plugin):
         context={'mode': 'channel'},
         group='archive')
     def archive(self, event, size=50, mode=None, user=None, channel=None):
-        if 0 > size >= 15000:
+        if size < 1 or size > 15000:
             raise CommandFail('too many messages must be between 1-15000')
 
         q = Message.select(Message.id).join(User).order_by(Message.id.desc()).limit(size)
@@ -898,8 +906,8 @@ class AdminPlugin(Plugin):
         """
         Removes messages
         """
-        if 0 > size >= 10000:
-            raise CommandFail('too many messages must be between 1-10000')
+        if size > 1 or size > 10000:
+            raise CommandFail('too many messages. Must be between 1-10000')
 
         if event.channel.id in self.cleans:
             raise CommandFail('a clean is already running on this channel')
@@ -953,17 +961,23 @@ class AdminPlugin(Plugin):
         del self.cleans[event.channel.id]
 
     @Plugin.command(
-	'bypass',
+	    'addbypass',
         '<user:user> <role:str> [reason:str...]',
-	level=-1,
-	context={'mode': 'remove'},
-	group='role')
+	    level=-1,
+	    context={'mode': 'add'},
+	    group='role')
     @Plugin.command(
         'add',
         '<user:user> <role:str> [reason:str...]',
         level=CommandLevels.MOD,
         context={'mode': 'add'},
         group='role')
+    @Plugin.command(
+	    'rmbypass',
+        '<user:user> <role:str> [reason:str...]',
+	    level=-1,
+	    context={'mode': 'remove'},
+	    group='role')
     @Plugin.command(
         'rmv',
         '<user:user> <role:str> [reason:str...]',
@@ -1282,8 +1296,11 @@ class AdminPlugin(Plugin):
         finally:
             lock.release()
 
-    @Plugin.command('log', '<user:user|snowflake>', group='voice', level=CommandLevels.MOD)
-    def voice_log(self, event, user):
+    @Plugin.command('log', '[user:user|snowflake]', group='voice', level=CommandLevels.MOD)
+    def voice_log(self, event, user=None):
+        if user is None:
+            user = event.author.id
+
         if isinstance(user, DiscoUser):
             user = user.id
 
diff --git a/rowboat/plugins/utilities.py b/rowboat/plugins/utilities.py
index 0840c8d..88cad97 100644
--- a/rowboat/plugins/utilities.py
+++ b/rowboat/plugins/utilities.py
@@ -117,18 +117,13 @@ class UtilitiesPlugin(Plugin):
     @Plugin.command('dog', global_=True) #global_=True! what will he do?
     def dog(self, event):
         try:
-            r = requests.get('https://random.dog/woof',
-            params={'filter': 'mp4,webm,gif'}) #
+            r = requests.get('https://api.thedogapi.com/v1/images/search?format=src')
             r.raise_for_status()
+            ext = r.headers['content-type'].split('/')[-1].split(';')[0]
+            event.msg.reply('', attachments=[('dog.{}'.format(ext), r.content)])
         except:
             return event.msg.reply(r.status_code + ' Dog not found :(')
 
-        url = r.json()['file']
-
-        r = requests.get('https://random.dog/' + url)
-        r.raise_for_status()
-        event.msg.reply('', attachments=[(url, r.content)])
-
     @Plugin.command('emoji', '<emoji:str>', global_=True)
     def emoji(self, event, emoji):
         if not EMOJI_RE.match(emoji):
@@ -276,12 +271,15 @@ class UtilitiesPlugin(Plugin):
             try: 
                 embed.color = get_dominant_colors_guild(guild)
             except:
-                embed.color = 'FFFFFF'
+                embed.color = 0x7289DA
         embed.description = '\n'.join(content)
         event.msg.reply('', embed=embed)
 
-    @Plugin.command('info', '<user:user>')
-    def info(self, event, user):
+    @Plugin.command('info', '[user:user]')
+    def info(self, event, user=None):
+        if user is None:
+            user = event.author
+        
         content = []
         content.append(u'**\u276F User Information**')
         content.append(u'ID: {}'.format(user.id))
@@ -469,8 +467,8 @@ class UtilitiesPlugin(Plugin):
     @Plugin.command('add', '<duration:str> <content:str...>', group='r', global_=True)
     @Plugin.command('remind', '<duration:str> <content:str...>', global_=True)
     def cmd_remind(self, event, duration, content):
-        if Reminder.count_for_user(event.author.id) > 30:
-            return event.msg.reply(':warning: you an only have 15 reminders going at once!')
+        if Reminder.count_for_user(event.author.id) > 15:
+            return event.msg.reply(':warning: you can only have 15 reminders going at once!')
 
         remind_at = parse_duration(duration)
         if remind_at > (datetime.utcnow() + timedelta(seconds=5 * YEAR_IN_SEC)):
-- 
2.24.1.windows.2

